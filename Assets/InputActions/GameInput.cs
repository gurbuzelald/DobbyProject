//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/InputActions/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""WinSceneButtons"",
            ""id"": ""d171f594-bb9e-4a85-b7fd-ce803a028d02"",
            ""actions"": [
                {
                    ""name"": ""MenuButton"",
                    ""type"": ""Value"",
                    ""id"": ""07d8ad5c-cdb3-4c90-8982-d5d77824e5e7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayAgainButton"",
                    ""type"": ""Button"",
                    ""id"": ""c66f28d0-5428-4ed3-b348-0fe22311fc9c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuitButton"",
                    ""type"": ""Button"",
                    ""id"": ""87ba2b2e-a740-4147-b4ba-2c6229eb9b73"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7f05f97b-ce99-4760-a53b-ae7d8a3f3e0a"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1075bc5b-8ca0-4ea0-92b3-03830bb09213"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayAgainButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f56ec84-a2b3-4bf4-9967-f59fde39300b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuitButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""EndSceneButttons"",
            ""id"": ""4cd394a2-e9bb-43dd-98ab-485b4f5ef0dc"",
            ""actions"": [
                {
                    ""name"": ""MenuButton"",
                    ""type"": ""Button"",
                    ""id"": ""90357695-3bb7-4f57-a6ea-98b02e81556a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayAgainButton"",
                    ""type"": ""Button"",
                    ""id"": ""13bf8215-1404-4991-a019-09c692fcaf7d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuitButton"",
                    ""type"": ""Button"",
                    ""id"": ""68d4aa51-f43b-4291-8c94-3923611c4d6f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2031ff1d-61b6-4d6b-8905-1715d5e550f9"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e0fd2ad-269d-4182-bf61-7865d476b066"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayAgainButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8311ea41-9637-415a-8983-afb675eadb3c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuitButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PickWeaponSceneButtons"",
            ""id"": ""31d8b6d3-c4a9-426e-8e17-3e26f14e2986"",
            ""actions"": [
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""26db156b-2321-459c-95c3-46462f419c03"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B"",
                    ""type"": ""Button"",
                    ""id"": ""d1be1148-4dd8-460d-9148-cab8428965f5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""C"",
                    ""type"": ""Button"",
                    ""id"": ""4d223422-5234-4e75-bb03-5a283dbc28ea"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D"",
                    ""type"": ""Button"",
                    ""id"": ""fddb90c4-bb46-413c-bc28-c132e066472d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E"",
                    ""type"": ""Button"",
                    ""id"": ""db0c0d21-abb2-4ea0-b79d-b939f2734cd8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""F"",
                    ""type"": ""Button"",
                    ""id"": ""4389950e-5435-4c0d-8efb-ce55e906db9c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""G"",
                    ""type"": ""Button"",
                    ""id"": ""d04ab74c-965b-49f7-8e5e-47b9d1e977f3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""H"",
                    ""type"": ""Button"",
                    ""id"": ""783ada17-8084-4f66-83fe-b1b0c2b457c5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""I"",
                    ""type"": ""Button"",
                    ""id"": ""9115fc30-ab83-4cf1-a61e-d737bc17f6e5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J"",
                    ""type"": ""Button"",
                    ""id"": ""7a97bc93-7bd3-4144-812d-1c007248cc03"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuButton"",
                    ""type"": ""Button"",
                    ""id"": ""f252e9c5-8753-43c1-b9b4-da70af3455dc"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickCharacterButton"",
                    ""type"": ""Button"",
                    ""id"": ""267d54b1-638a-49bc-864c-1ece9dc5308c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponMenuInput"",
                    ""type"": ""Value"",
                    ""id"": ""af33c9f0-1611-4865-ae36-4598c2f022ca"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""88035860-9323-4326-bf9a-070e9cc52c37"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bbf6edd-4a7d-4c27-bc50-9e2bb6a352c4"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc2971d1-dfa6-4365-85a0-3cf81a8cdc5d"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""C"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""489243c6-04f7-4fc8-b3d1-89312fa8d375"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e50a6d63-6a1c-4032-9ba5-08fa6d566976"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73b930df-72eb-4784-8930-d1f97f8f1f57"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a025a7a-89fd-421b-aa0c-6c768ef679ee"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""G"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49315bcf-907b-4c6a-8332-8967f91d754b"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""H"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee8cf8b7-4998-4c11-a818-b3866722f2d0"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""I"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf185dba-d483-4d83-a91c-befde11516c0"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""J"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f058543a-473c-4eca-98b3-0678b7d4c0e3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4e74060-c9c7-4fcb-b1f3-d3880a26cf32"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickCharacterButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b471900-20cf-47b0-a05f-9afd611fff5a"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponMenuInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PickCharacterSceneButtons"",
            ""id"": ""c53bcc12-cd99-41b7-93ea-bc4aed23d2bb"",
            ""actions"": [
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""0c706a73-f56f-496b-880d-1b0f0869fcc1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B"",
                    ""type"": ""Button"",
                    ""id"": ""a3e8be1b-cb6e-4c65-b781-9bd169f3c42e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""C"",
                    ""type"": ""Button"",
                    ""id"": ""3ebf9367-4a02-432f-9b76-a8c2245318d9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D"",
                    ""type"": ""Button"",
                    ""id"": ""637e010f-8571-465f-a123-998ce168cfac"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E"",
                    ""type"": ""Button"",
                    ""id"": ""e4ee3190-9ab8-44b6-9d97-770c2862a1c5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""F"",
                    ""type"": ""Button"",
                    ""id"": ""083e918e-b9d2-4c3f-8884-af2cea511f1a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""G"",
                    ""type"": ""Button"",
                    ""id"": ""946ccd71-7f34-453f-96f6-f8a9dac61460"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""H"",
                    ""type"": ""Button"",
                    ""id"": ""6585bc11-4bf4-4914-9f17-847cf22c73ef"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""I"",
                    ""type"": ""Button"",
                    ""id"": ""42ff6b37-2653-4834-96a3-180039aca289"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J"",
                    ""type"": ""Button"",
                    ""id"": ""6cc84f5d-692f-44dc-9cfb-3556a0e2fef4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""K"",
                    ""type"": ""Button"",
                    ""id"": ""69d24816-694b-4a91-ac5a-a2eb2676fef6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuButton"",
                    ""type"": ""Button"",
                    ""id"": ""6741e930-79d2-431b-bb7f-7addb3a5fd49"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickWeaponButton"",
                    ""type"": ""Button"",
                    ""id"": ""98a09ca5-6a12-4fd2-9fd2-d23aad4d69ff"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CharacterMenuInput"",
                    ""type"": ""Value"",
                    ""id"": ""9007fbd5-d8b2-4d49-bb2d-b7c3f4b1052f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""039e5927-eab0-4ab0-867a-70fea13766db"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50026e56-5b58-4ab9-b317-50c0e8c99548"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5740956a-59cb-4a66-8a86-5e8540b37735"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""C"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6db1581-80e1-4ab0-b664-5f0df2f77aa0"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9daa0bbd-8603-4f43-8d9f-cf53b69a6984"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbcd0add-0121-438d-8997-fb8ae3744f63"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16207643-d15b-444c-848a-4abfe1e65d36"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""G"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e79b831-20de-46f4-a4df-b973e1c9c4dc"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""H"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41801cab-09e6-47f6-a6cc-06636eb3d48f"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""I"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6d2b35d-d999-4b20-8b36-5b1b34cb5188"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""J"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd260a18-e200-4186-8e7c-9c17d97f079d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""K"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6eb89120-dcae-41a2-b3e8-d949c708fb44"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4dd56708-9766-41ff-96f0-7f83dfcb04b8"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickWeaponButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""818fa03f-b8b4-4b8f-bcd9-43f0bfa49290"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CharacterMenuInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""LevelsSceneButtons"",
            ""id"": ""a8a1f76e-1e03-43ac-8e18-70299ebfc322"",
            ""actions"": [
                {
                    ""name"": ""Level1"",
                    ""type"": ""Button"",
                    ""id"": ""d5e9f0fd-0c34-4766-b2f6-d0e1cc052f1b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Level2"",
                    ""type"": ""Button"",
                    ""id"": ""8aefa3f5-8d98-4172-a605-435fb5044847"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Level3"",
                    ""type"": ""Button"",
                    ""id"": ""76f832ee-5bd5-4b46-b618-2a065a94717f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Level4"",
                    ""type"": ""Button"",
                    ""id"": ""a6586f5f-4b1f-4363-b593-a20dc3f5f51c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Level5"",
                    ""type"": ""Button"",
                    ""id"": ""d1514595-b9f1-4c8f-8606-87dea5549997"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Level6"",
                    ""type"": ""Button"",
                    ""id"": ""b4f1b705-74b3-4a09-a1d3-ee235310fb65"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Level7"",
                    ""type"": ""Button"",
                    ""id"": ""a7e36594-0cc8-451e-8394-6b9bc3ba9912"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Level8"",
                    ""type"": ""Button"",
                    ""id"": ""78593538-0579-40d2-b931-812b3fd7f336"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Level9"",
                    ""type"": ""Button"",
                    ""id"": ""09346a69-adb3-4adf-a191-b5ff374b205e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Level10"",
                    ""type"": ""Button"",
                    ""id"": ""95bedba2-8f16-4f53-830b-bca6df4a96fd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LevelsMenuButton"",
                    ""type"": ""Button"",
                    ""id"": ""ea1bf206-54f2-49bf-ab6f-a9404619a48a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3fcf4ecc-0394-4bbd-92ce-eb3caa68e3e3"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Level1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80a8063c-16d3-4061-939e-f4f2f83c9228"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Level2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e6294f9-0f57-47d1-a62b-fd5e75cfea29"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Level3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba656204-82da-4ed0-a95f-ee8083fd832e"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Level4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c938cf7-7fb2-4bc3-be59-89105092d73e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Level5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57a9b87f-ddce-4068-8d5f-5471bfbb2c4e"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Level6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5153fc6-4728-468c-a28a-acd846b4a4cb"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Level7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b725f9d1-ebdb-42a0-b59b-775de93d86be"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Level8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f0ca394-ea45-411d-83d9-8284612b0774"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Level9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69afbb85-33e0-41f1-b7cc-3323cf9a75eb"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Level10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a710aac-58c2-41d2-b625-6c30bdeeb16e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LevelsMenuButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuSceneButtons"",
            ""id"": ""df26bd27-2ea3-41e8-ad9e-a7127cd5fcc5"",
            ""actions"": [
                {
                    ""name"": ""PlayButton"",
                    ""type"": ""Button"",
                    ""id"": ""5cecc246-f5c3-478e-9431-51d1bb1cd8c1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LevelsButton"",
                    ""type"": ""Button"",
                    ""id"": ""184e9bdc-ec1e-4515-89f6-406d57b0f0b0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SettingButton"",
                    ""type"": ""Button"",
                    ""id"": ""a55cb353-d9c8-420f-a4af-e8037bf82641"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuitButton"",
                    ""type"": ""Button"",
                    ""id"": ""76cc305c-3106-48c4-b4a7-be0759ea67cb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LanguageButton"",
                    ""type"": ""Button"",
                    ""id"": ""9ec9a0b0-ed6a-4bf9-8e61-d9d2dbd402e5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuDefaultButton"",
                    ""type"": ""Button"",
                    ""id"": ""8d51192b-3835-45d7-b470-d0375c17a187"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickCharacterButton"",
                    ""type"": ""Button"",
                    ""id"": ""cab06069-f5cd-459c-adc3-745013ac70a2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickWeaponButton"",
                    ""type"": ""Button"",
                    ""id"": ""9dc0055a-add7-4a4b-a709-973be65d7798"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ContinueButton"",
                    ""type"": ""Button"",
                    ""id"": ""b9011470-9f88-4cd8-9ede-9b158008d433"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetGameButton"",
                    ""type"": ""Button"",
                    ""id"": ""ad191406-52d7-4fba-981f-2b2a3f4d5c0d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""98826cfb-4498-49cd-b446-9d58d0542593"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a4a240b-22d2-4ddf-b6b6-1bf8cafda41d"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LevelsButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36a20ab9-4878-429b-8c6b-eaf55de55e6e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SettingButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""381d991e-befd-4028-9325-401e0f09db77"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuitButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38e120ab-4561-444c-8e27-9bcb0338f8c8"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LanguageButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b88a94f6-be34-42fb-b4e1-a44ca4706cf6"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuDefaultButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49bf9929-4725-4876-b16d-442814b11aab"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickCharacterButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""594ca1b6-cdb0-48b9-8578-51abd1d13a9d"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickWeaponButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f00c22c3-d711-4c90-8606-1e2a0a29c5a5"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ContinueButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e60faac-3335-4084-82c6-29ee12627fc9"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetGameButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TopPanelButtons"",
            ""id"": ""0da6d27c-75ab-43f8-8a66-70e8124b99a8"",
            ""actions"": [
                {
                    ""name"": ""PauseButton"",
                    ""type"": ""Button"",
                    ""id"": ""70d65464-fcea-4688-aaf6-3ec915e3e37c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayAgainButton"",
                    ""type"": ""Button"",
                    ""id"": ""56660887-bb99-4304-9383-83ab38bf6eca"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fae86d01-5532-468b-b72f-650196b0ea34"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b65d5c9f-e9da-428a-b1e9-219d5f36652e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayAgainButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PausePanelButtons"",
            ""id"": ""8814251b-15cb-45fd-855b-a7c3efc6b817"",
            ""actions"": [
                {
                    ""name"": ""MenuButton"",
                    ""type"": ""Button"",
                    ""id"": ""fdc2bdf4-b771-414b-b949-4cc667a2b16a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DefaultButton"",
                    ""type"": ""Button"",
                    ""id"": ""3fbb26e2-8618-4898-b9f1-efde898c8375"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4fb56582-068c-4450-8152-a25410bf75b6"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8f2e89b-f86f-4b79-8d13-1eb012038793"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DefaultButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerMain"",
            ""id"": ""8b07d56a-e8cc-4aae-8cab-f64cc25eb36a"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""df072146-7ea7-447a-9ead-429654f921bc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""86fa2ffd-2359-4442-8eb9-cfc40c1e6b67"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a9f65685-748a-48be-a574-af67be10c82b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""941c4afe-4cfe-4cc1-a0cc-3ddee1a58fa7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""3ebf5ad6-97ac-4c79-8094-da462efef3a9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sword"",
                    ""type"": ""Button"",
                    ""id"": ""c4ee5837-6316-4f43-963e-9273b677826e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireDirection"",
                    ""type"": ""Value"",
                    ""id"": ""69e71891-a548-4f58-8991-b2f9640455cd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ee354541-6206-4701-9bc3-390d135adc0e"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c942b8b3-943e-4ce4-95d1-00593a04af57"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""47b87892-73df-483b-b096-30f695a34521"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""96ae8be1-28ce-4d8f-9fd7-fe95d4b5a4ba"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""028d9703-3408-4443-8570-f491b9df2cb2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7ebaeb76-db45-4887-8a92-f8e1c9d13120"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""de762be1-476c-41f0-a51d-d06109566946"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17d555ab-dbbf-417b-bf98-7f0cffa6a9d6"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d7621e0-f9f9-446c-9568-b2e08dbccdd0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b035fa4-7328-4449-a94e-b214be57f9f9"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88fffac7-8f1a-4c05-8745-af4a72df0da9"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65dacd52-9283-464a-9715-1883799efad2"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5c571a1-43da-499d-adeb-ba2fa4c173cf"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sword"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7558aa4c-4321-41cf-92c3-1be998f37519"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GrowMap"",
            ""id"": ""251f1aef-28fd-4b87-87cc-d9619170c054"",
            ""actions"": [
                {
                    ""name"": ""GrowingState"",
                    ""type"": ""Button"",
                    ""id"": ""47bd85d3-9d23-4abf-998e-231d2587c187"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fb5d805b-b1ac-473f-8c61-d3a711af9a69"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrowingState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // WinSceneButtons
        m_WinSceneButtons = asset.FindActionMap("WinSceneButtons", throwIfNotFound: true);
        m_WinSceneButtons_MenuButton = m_WinSceneButtons.FindAction("MenuButton", throwIfNotFound: true);
        m_WinSceneButtons_PlayAgainButton = m_WinSceneButtons.FindAction("PlayAgainButton", throwIfNotFound: true);
        m_WinSceneButtons_QuitButton = m_WinSceneButtons.FindAction("QuitButton", throwIfNotFound: true);
        // EndSceneButttons
        m_EndSceneButttons = asset.FindActionMap("EndSceneButttons", throwIfNotFound: true);
        m_EndSceneButttons_MenuButton = m_EndSceneButttons.FindAction("MenuButton", throwIfNotFound: true);
        m_EndSceneButttons_PlayAgainButton = m_EndSceneButttons.FindAction("PlayAgainButton", throwIfNotFound: true);
        m_EndSceneButttons_QuitButton = m_EndSceneButttons.FindAction("QuitButton", throwIfNotFound: true);
        // PickWeaponSceneButtons
        m_PickWeaponSceneButtons = asset.FindActionMap("PickWeaponSceneButtons", throwIfNotFound: true);
        m_PickWeaponSceneButtons_A = m_PickWeaponSceneButtons.FindAction("A", throwIfNotFound: true);
        m_PickWeaponSceneButtons_B = m_PickWeaponSceneButtons.FindAction("B", throwIfNotFound: true);
        m_PickWeaponSceneButtons_C = m_PickWeaponSceneButtons.FindAction("C", throwIfNotFound: true);
        m_PickWeaponSceneButtons_D = m_PickWeaponSceneButtons.FindAction("D", throwIfNotFound: true);
        m_PickWeaponSceneButtons_E = m_PickWeaponSceneButtons.FindAction("E", throwIfNotFound: true);
        m_PickWeaponSceneButtons_F = m_PickWeaponSceneButtons.FindAction("F", throwIfNotFound: true);
        m_PickWeaponSceneButtons_G = m_PickWeaponSceneButtons.FindAction("G", throwIfNotFound: true);
        m_PickWeaponSceneButtons_H = m_PickWeaponSceneButtons.FindAction("H", throwIfNotFound: true);
        m_PickWeaponSceneButtons_I = m_PickWeaponSceneButtons.FindAction("I", throwIfNotFound: true);
        m_PickWeaponSceneButtons_J = m_PickWeaponSceneButtons.FindAction("J", throwIfNotFound: true);
        m_PickWeaponSceneButtons_MenuButton = m_PickWeaponSceneButtons.FindAction("MenuButton", throwIfNotFound: true);
        m_PickWeaponSceneButtons_PickCharacterButton = m_PickWeaponSceneButtons.FindAction("PickCharacterButton", throwIfNotFound: true);
        m_PickWeaponSceneButtons_WeaponMenuInput = m_PickWeaponSceneButtons.FindAction("WeaponMenuInput", throwIfNotFound: true);
        // PickCharacterSceneButtons
        m_PickCharacterSceneButtons = asset.FindActionMap("PickCharacterSceneButtons", throwIfNotFound: true);
        m_PickCharacterSceneButtons_A = m_PickCharacterSceneButtons.FindAction("A", throwIfNotFound: true);
        m_PickCharacterSceneButtons_B = m_PickCharacterSceneButtons.FindAction("B", throwIfNotFound: true);
        m_PickCharacterSceneButtons_C = m_PickCharacterSceneButtons.FindAction("C", throwIfNotFound: true);
        m_PickCharacterSceneButtons_D = m_PickCharacterSceneButtons.FindAction("D", throwIfNotFound: true);
        m_PickCharacterSceneButtons_E = m_PickCharacterSceneButtons.FindAction("E", throwIfNotFound: true);
        m_PickCharacterSceneButtons_F = m_PickCharacterSceneButtons.FindAction("F", throwIfNotFound: true);
        m_PickCharacterSceneButtons_G = m_PickCharacterSceneButtons.FindAction("G", throwIfNotFound: true);
        m_PickCharacterSceneButtons_H = m_PickCharacterSceneButtons.FindAction("H", throwIfNotFound: true);
        m_PickCharacterSceneButtons_I = m_PickCharacterSceneButtons.FindAction("I", throwIfNotFound: true);
        m_PickCharacterSceneButtons_J = m_PickCharacterSceneButtons.FindAction("J", throwIfNotFound: true);
        m_PickCharacterSceneButtons_K = m_PickCharacterSceneButtons.FindAction("K", throwIfNotFound: true);
        m_PickCharacterSceneButtons_MenuButton = m_PickCharacterSceneButtons.FindAction("MenuButton", throwIfNotFound: true);
        m_PickCharacterSceneButtons_PickWeaponButton = m_PickCharacterSceneButtons.FindAction("PickWeaponButton", throwIfNotFound: true);
        m_PickCharacterSceneButtons_CharacterMenuInput = m_PickCharacterSceneButtons.FindAction("CharacterMenuInput", throwIfNotFound: true);
        // LevelsSceneButtons
        m_LevelsSceneButtons = asset.FindActionMap("LevelsSceneButtons", throwIfNotFound: true);
        m_LevelsSceneButtons_Level1 = m_LevelsSceneButtons.FindAction("Level1", throwIfNotFound: true);
        m_LevelsSceneButtons_Level2 = m_LevelsSceneButtons.FindAction("Level2", throwIfNotFound: true);
        m_LevelsSceneButtons_Level3 = m_LevelsSceneButtons.FindAction("Level3", throwIfNotFound: true);
        m_LevelsSceneButtons_Level4 = m_LevelsSceneButtons.FindAction("Level4", throwIfNotFound: true);
        m_LevelsSceneButtons_Level5 = m_LevelsSceneButtons.FindAction("Level5", throwIfNotFound: true);
        m_LevelsSceneButtons_Level6 = m_LevelsSceneButtons.FindAction("Level6", throwIfNotFound: true);
        m_LevelsSceneButtons_Level7 = m_LevelsSceneButtons.FindAction("Level7", throwIfNotFound: true);
        m_LevelsSceneButtons_Level8 = m_LevelsSceneButtons.FindAction("Level8", throwIfNotFound: true);
        m_LevelsSceneButtons_Level9 = m_LevelsSceneButtons.FindAction("Level9", throwIfNotFound: true);
        m_LevelsSceneButtons_Level10 = m_LevelsSceneButtons.FindAction("Level10", throwIfNotFound: true);
        m_LevelsSceneButtons_LevelsMenuButton = m_LevelsSceneButtons.FindAction("LevelsMenuButton", throwIfNotFound: true);
        // MenuSceneButtons
        m_MenuSceneButtons = asset.FindActionMap("MenuSceneButtons", throwIfNotFound: true);
        m_MenuSceneButtons_PlayButton = m_MenuSceneButtons.FindAction("PlayButton", throwIfNotFound: true);
        m_MenuSceneButtons_LevelsButton = m_MenuSceneButtons.FindAction("LevelsButton", throwIfNotFound: true);
        m_MenuSceneButtons_SettingButton = m_MenuSceneButtons.FindAction("SettingButton", throwIfNotFound: true);
        m_MenuSceneButtons_QuitButton = m_MenuSceneButtons.FindAction("QuitButton", throwIfNotFound: true);
        m_MenuSceneButtons_LanguageButton = m_MenuSceneButtons.FindAction("LanguageButton", throwIfNotFound: true);
        m_MenuSceneButtons_MenuDefaultButton = m_MenuSceneButtons.FindAction("MenuDefaultButton", throwIfNotFound: true);
        m_MenuSceneButtons_PickCharacterButton = m_MenuSceneButtons.FindAction("PickCharacterButton", throwIfNotFound: true);
        m_MenuSceneButtons_PickWeaponButton = m_MenuSceneButtons.FindAction("PickWeaponButton", throwIfNotFound: true);
        m_MenuSceneButtons_ContinueButton = m_MenuSceneButtons.FindAction("ContinueButton", throwIfNotFound: true);
        m_MenuSceneButtons_ResetGameButton = m_MenuSceneButtons.FindAction("ResetGameButton", throwIfNotFound: true);
        // TopPanelButtons
        m_TopPanelButtons = asset.FindActionMap("TopPanelButtons", throwIfNotFound: true);
        m_TopPanelButtons_PauseButton = m_TopPanelButtons.FindAction("PauseButton", throwIfNotFound: true);
        m_TopPanelButtons_PlayAgainButton = m_TopPanelButtons.FindAction("PlayAgainButton", throwIfNotFound: true);
        // PausePanelButtons
        m_PausePanelButtons = asset.FindActionMap("PausePanelButtons", throwIfNotFound: true);
        m_PausePanelButtons_MenuButton = m_PausePanelButtons.FindAction("MenuButton", throwIfNotFound: true);
        m_PausePanelButtons_DefaultButton = m_PausePanelButtons.FindAction("DefaultButton", throwIfNotFound: true);
        // PlayerMain
        m_PlayerMain = asset.FindActionMap("PlayerMain", throwIfNotFound: true);
        m_PlayerMain_Move = m_PlayerMain.FindAction("Move", throwIfNotFound: true);
        m_PlayerMain_Fire = m_PlayerMain.FindAction("Fire", throwIfNotFound: true);
        m_PlayerMain_Jump = m_PlayerMain.FindAction("Jump", throwIfNotFound: true);
        m_PlayerMain_Look = m_PlayerMain.FindAction("Look", throwIfNotFound: true);
        m_PlayerMain_Run = m_PlayerMain.FindAction("Run", throwIfNotFound: true);
        m_PlayerMain_Sword = m_PlayerMain.FindAction("Sword", throwIfNotFound: true);
        m_PlayerMain_FireDirection = m_PlayerMain.FindAction("FireDirection", throwIfNotFound: true);
        // GrowMap
        m_GrowMap = asset.FindActionMap("GrowMap", throwIfNotFound: true);
        m_GrowMap_GrowingState = m_GrowMap.FindAction("GrowingState", throwIfNotFound: true);
    }

    ~@GameInput()
    {
        UnityEngine.Debug.Assert(!m_WinSceneButtons.enabled, "This will cause a leak and performance issues, GameInput.WinSceneButtons.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_EndSceneButttons.enabled, "This will cause a leak and performance issues, GameInput.EndSceneButttons.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PickWeaponSceneButtons.enabled, "This will cause a leak and performance issues, GameInput.PickWeaponSceneButtons.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PickCharacterSceneButtons.enabled, "This will cause a leak and performance issues, GameInput.PickCharacterSceneButtons.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_LevelsSceneButtons.enabled, "This will cause a leak and performance issues, GameInput.LevelsSceneButtons.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_MenuSceneButtons.enabled, "This will cause a leak and performance issues, GameInput.MenuSceneButtons.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_TopPanelButtons.enabled, "This will cause a leak and performance issues, GameInput.TopPanelButtons.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PausePanelButtons.enabled, "This will cause a leak and performance issues, GameInput.PausePanelButtons.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PlayerMain.enabled, "This will cause a leak and performance issues, GameInput.PlayerMain.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_GrowMap.enabled, "This will cause a leak and performance issues, GameInput.GrowMap.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // WinSceneButtons
    private readonly InputActionMap m_WinSceneButtons;
    private List<IWinSceneButtonsActions> m_WinSceneButtonsActionsCallbackInterfaces = new List<IWinSceneButtonsActions>();
    private readonly InputAction m_WinSceneButtons_MenuButton;
    private readonly InputAction m_WinSceneButtons_PlayAgainButton;
    private readonly InputAction m_WinSceneButtons_QuitButton;
    public struct WinSceneButtonsActions
    {
        private @GameInput m_Wrapper;
        public WinSceneButtonsActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MenuButton => m_Wrapper.m_WinSceneButtons_MenuButton;
        public InputAction @PlayAgainButton => m_Wrapper.m_WinSceneButtons_PlayAgainButton;
        public InputAction @QuitButton => m_Wrapper.m_WinSceneButtons_QuitButton;
        public InputActionMap Get() { return m_Wrapper.m_WinSceneButtons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WinSceneButtonsActions set) { return set.Get(); }
        public void AddCallbacks(IWinSceneButtonsActions instance)
        {
            if (instance == null || m_Wrapper.m_WinSceneButtonsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_WinSceneButtonsActionsCallbackInterfaces.Add(instance);
            @MenuButton.started += instance.OnMenuButton;
            @MenuButton.performed += instance.OnMenuButton;
            @MenuButton.canceled += instance.OnMenuButton;
            @PlayAgainButton.started += instance.OnPlayAgainButton;
            @PlayAgainButton.performed += instance.OnPlayAgainButton;
            @PlayAgainButton.canceled += instance.OnPlayAgainButton;
            @QuitButton.started += instance.OnQuitButton;
            @QuitButton.performed += instance.OnQuitButton;
            @QuitButton.canceled += instance.OnQuitButton;
        }

        private void UnregisterCallbacks(IWinSceneButtonsActions instance)
        {
            @MenuButton.started -= instance.OnMenuButton;
            @MenuButton.performed -= instance.OnMenuButton;
            @MenuButton.canceled -= instance.OnMenuButton;
            @PlayAgainButton.started -= instance.OnPlayAgainButton;
            @PlayAgainButton.performed -= instance.OnPlayAgainButton;
            @PlayAgainButton.canceled -= instance.OnPlayAgainButton;
            @QuitButton.started -= instance.OnQuitButton;
            @QuitButton.performed -= instance.OnQuitButton;
            @QuitButton.canceled -= instance.OnQuitButton;
        }

        public void RemoveCallbacks(IWinSceneButtonsActions instance)
        {
            if (m_Wrapper.m_WinSceneButtonsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IWinSceneButtonsActions instance)
        {
            foreach (var item in m_Wrapper.m_WinSceneButtonsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_WinSceneButtonsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public WinSceneButtonsActions @WinSceneButtons => new WinSceneButtonsActions(this);

    // EndSceneButttons
    private readonly InputActionMap m_EndSceneButttons;
    private List<IEndSceneButttonsActions> m_EndSceneButttonsActionsCallbackInterfaces = new List<IEndSceneButttonsActions>();
    private readonly InputAction m_EndSceneButttons_MenuButton;
    private readonly InputAction m_EndSceneButttons_PlayAgainButton;
    private readonly InputAction m_EndSceneButttons_QuitButton;
    public struct EndSceneButttonsActions
    {
        private @GameInput m_Wrapper;
        public EndSceneButttonsActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MenuButton => m_Wrapper.m_EndSceneButttons_MenuButton;
        public InputAction @PlayAgainButton => m_Wrapper.m_EndSceneButttons_PlayAgainButton;
        public InputAction @QuitButton => m_Wrapper.m_EndSceneButttons_QuitButton;
        public InputActionMap Get() { return m_Wrapper.m_EndSceneButttons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EndSceneButttonsActions set) { return set.Get(); }
        public void AddCallbacks(IEndSceneButttonsActions instance)
        {
            if (instance == null || m_Wrapper.m_EndSceneButttonsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_EndSceneButttonsActionsCallbackInterfaces.Add(instance);
            @MenuButton.started += instance.OnMenuButton;
            @MenuButton.performed += instance.OnMenuButton;
            @MenuButton.canceled += instance.OnMenuButton;
            @PlayAgainButton.started += instance.OnPlayAgainButton;
            @PlayAgainButton.performed += instance.OnPlayAgainButton;
            @PlayAgainButton.canceled += instance.OnPlayAgainButton;
            @QuitButton.started += instance.OnQuitButton;
            @QuitButton.performed += instance.OnQuitButton;
            @QuitButton.canceled += instance.OnQuitButton;
        }

        private void UnregisterCallbacks(IEndSceneButttonsActions instance)
        {
            @MenuButton.started -= instance.OnMenuButton;
            @MenuButton.performed -= instance.OnMenuButton;
            @MenuButton.canceled -= instance.OnMenuButton;
            @PlayAgainButton.started -= instance.OnPlayAgainButton;
            @PlayAgainButton.performed -= instance.OnPlayAgainButton;
            @PlayAgainButton.canceled -= instance.OnPlayAgainButton;
            @QuitButton.started -= instance.OnQuitButton;
            @QuitButton.performed -= instance.OnQuitButton;
            @QuitButton.canceled -= instance.OnQuitButton;
        }

        public void RemoveCallbacks(IEndSceneButttonsActions instance)
        {
            if (m_Wrapper.m_EndSceneButttonsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IEndSceneButttonsActions instance)
        {
            foreach (var item in m_Wrapper.m_EndSceneButttonsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_EndSceneButttonsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public EndSceneButttonsActions @EndSceneButttons => new EndSceneButttonsActions(this);

    // PickWeaponSceneButtons
    private readonly InputActionMap m_PickWeaponSceneButtons;
    private List<IPickWeaponSceneButtonsActions> m_PickWeaponSceneButtonsActionsCallbackInterfaces = new List<IPickWeaponSceneButtonsActions>();
    private readonly InputAction m_PickWeaponSceneButtons_A;
    private readonly InputAction m_PickWeaponSceneButtons_B;
    private readonly InputAction m_PickWeaponSceneButtons_C;
    private readonly InputAction m_PickWeaponSceneButtons_D;
    private readonly InputAction m_PickWeaponSceneButtons_E;
    private readonly InputAction m_PickWeaponSceneButtons_F;
    private readonly InputAction m_PickWeaponSceneButtons_G;
    private readonly InputAction m_PickWeaponSceneButtons_H;
    private readonly InputAction m_PickWeaponSceneButtons_I;
    private readonly InputAction m_PickWeaponSceneButtons_J;
    private readonly InputAction m_PickWeaponSceneButtons_MenuButton;
    private readonly InputAction m_PickWeaponSceneButtons_PickCharacterButton;
    private readonly InputAction m_PickWeaponSceneButtons_WeaponMenuInput;
    public struct PickWeaponSceneButtonsActions
    {
        private @GameInput m_Wrapper;
        public PickWeaponSceneButtonsActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @A => m_Wrapper.m_PickWeaponSceneButtons_A;
        public InputAction @B => m_Wrapper.m_PickWeaponSceneButtons_B;
        public InputAction @C => m_Wrapper.m_PickWeaponSceneButtons_C;
        public InputAction @D => m_Wrapper.m_PickWeaponSceneButtons_D;
        public InputAction @E => m_Wrapper.m_PickWeaponSceneButtons_E;
        public InputAction @F => m_Wrapper.m_PickWeaponSceneButtons_F;
        public InputAction @G => m_Wrapper.m_PickWeaponSceneButtons_G;
        public InputAction @H => m_Wrapper.m_PickWeaponSceneButtons_H;
        public InputAction @I => m_Wrapper.m_PickWeaponSceneButtons_I;
        public InputAction @J => m_Wrapper.m_PickWeaponSceneButtons_J;
        public InputAction @MenuButton => m_Wrapper.m_PickWeaponSceneButtons_MenuButton;
        public InputAction @PickCharacterButton => m_Wrapper.m_PickWeaponSceneButtons_PickCharacterButton;
        public InputAction @WeaponMenuInput => m_Wrapper.m_PickWeaponSceneButtons_WeaponMenuInput;
        public InputActionMap Get() { return m_Wrapper.m_PickWeaponSceneButtons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PickWeaponSceneButtonsActions set) { return set.Get(); }
        public void AddCallbacks(IPickWeaponSceneButtonsActions instance)
        {
            if (instance == null || m_Wrapper.m_PickWeaponSceneButtonsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PickWeaponSceneButtonsActionsCallbackInterfaces.Add(instance);
            @A.started += instance.OnA;
            @A.performed += instance.OnA;
            @A.canceled += instance.OnA;
            @B.started += instance.OnB;
            @B.performed += instance.OnB;
            @B.canceled += instance.OnB;
            @C.started += instance.OnC;
            @C.performed += instance.OnC;
            @C.canceled += instance.OnC;
            @D.started += instance.OnD;
            @D.performed += instance.OnD;
            @D.canceled += instance.OnD;
            @E.started += instance.OnE;
            @E.performed += instance.OnE;
            @E.canceled += instance.OnE;
            @F.started += instance.OnF;
            @F.performed += instance.OnF;
            @F.canceled += instance.OnF;
            @G.started += instance.OnG;
            @G.performed += instance.OnG;
            @G.canceled += instance.OnG;
            @H.started += instance.OnH;
            @H.performed += instance.OnH;
            @H.canceled += instance.OnH;
            @I.started += instance.OnI;
            @I.performed += instance.OnI;
            @I.canceled += instance.OnI;
            @J.started += instance.OnJ;
            @J.performed += instance.OnJ;
            @J.canceled += instance.OnJ;
            @MenuButton.started += instance.OnMenuButton;
            @MenuButton.performed += instance.OnMenuButton;
            @MenuButton.canceled += instance.OnMenuButton;
            @PickCharacterButton.started += instance.OnPickCharacterButton;
            @PickCharacterButton.performed += instance.OnPickCharacterButton;
            @PickCharacterButton.canceled += instance.OnPickCharacterButton;
            @WeaponMenuInput.started += instance.OnWeaponMenuInput;
            @WeaponMenuInput.performed += instance.OnWeaponMenuInput;
            @WeaponMenuInput.canceled += instance.OnWeaponMenuInput;
        }

        private void UnregisterCallbacks(IPickWeaponSceneButtonsActions instance)
        {
            @A.started -= instance.OnA;
            @A.performed -= instance.OnA;
            @A.canceled -= instance.OnA;
            @B.started -= instance.OnB;
            @B.performed -= instance.OnB;
            @B.canceled -= instance.OnB;
            @C.started -= instance.OnC;
            @C.performed -= instance.OnC;
            @C.canceled -= instance.OnC;
            @D.started -= instance.OnD;
            @D.performed -= instance.OnD;
            @D.canceled -= instance.OnD;
            @E.started -= instance.OnE;
            @E.performed -= instance.OnE;
            @E.canceled -= instance.OnE;
            @F.started -= instance.OnF;
            @F.performed -= instance.OnF;
            @F.canceled -= instance.OnF;
            @G.started -= instance.OnG;
            @G.performed -= instance.OnG;
            @G.canceled -= instance.OnG;
            @H.started -= instance.OnH;
            @H.performed -= instance.OnH;
            @H.canceled -= instance.OnH;
            @I.started -= instance.OnI;
            @I.performed -= instance.OnI;
            @I.canceled -= instance.OnI;
            @J.started -= instance.OnJ;
            @J.performed -= instance.OnJ;
            @J.canceled -= instance.OnJ;
            @MenuButton.started -= instance.OnMenuButton;
            @MenuButton.performed -= instance.OnMenuButton;
            @MenuButton.canceled -= instance.OnMenuButton;
            @PickCharacterButton.started -= instance.OnPickCharacterButton;
            @PickCharacterButton.performed -= instance.OnPickCharacterButton;
            @PickCharacterButton.canceled -= instance.OnPickCharacterButton;
            @WeaponMenuInput.started -= instance.OnWeaponMenuInput;
            @WeaponMenuInput.performed -= instance.OnWeaponMenuInput;
            @WeaponMenuInput.canceled -= instance.OnWeaponMenuInput;
        }

        public void RemoveCallbacks(IPickWeaponSceneButtonsActions instance)
        {
            if (m_Wrapper.m_PickWeaponSceneButtonsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPickWeaponSceneButtonsActions instance)
        {
            foreach (var item in m_Wrapper.m_PickWeaponSceneButtonsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PickWeaponSceneButtonsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PickWeaponSceneButtonsActions @PickWeaponSceneButtons => new PickWeaponSceneButtonsActions(this);

    // PickCharacterSceneButtons
    private readonly InputActionMap m_PickCharacterSceneButtons;
    private List<IPickCharacterSceneButtonsActions> m_PickCharacterSceneButtonsActionsCallbackInterfaces = new List<IPickCharacterSceneButtonsActions>();
    private readonly InputAction m_PickCharacterSceneButtons_A;
    private readonly InputAction m_PickCharacterSceneButtons_B;
    private readonly InputAction m_PickCharacterSceneButtons_C;
    private readonly InputAction m_PickCharacterSceneButtons_D;
    private readonly InputAction m_PickCharacterSceneButtons_E;
    private readonly InputAction m_PickCharacterSceneButtons_F;
    private readonly InputAction m_PickCharacterSceneButtons_G;
    private readonly InputAction m_PickCharacterSceneButtons_H;
    private readonly InputAction m_PickCharacterSceneButtons_I;
    private readonly InputAction m_PickCharacterSceneButtons_J;
    private readonly InputAction m_PickCharacterSceneButtons_K;
    private readonly InputAction m_PickCharacterSceneButtons_MenuButton;
    private readonly InputAction m_PickCharacterSceneButtons_PickWeaponButton;
    private readonly InputAction m_PickCharacterSceneButtons_CharacterMenuInput;
    public struct PickCharacterSceneButtonsActions
    {
        private @GameInput m_Wrapper;
        public PickCharacterSceneButtonsActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @A => m_Wrapper.m_PickCharacterSceneButtons_A;
        public InputAction @B => m_Wrapper.m_PickCharacterSceneButtons_B;
        public InputAction @C => m_Wrapper.m_PickCharacterSceneButtons_C;
        public InputAction @D => m_Wrapper.m_PickCharacterSceneButtons_D;
        public InputAction @E => m_Wrapper.m_PickCharacterSceneButtons_E;
        public InputAction @F => m_Wrapper.m_PickCharacterSceneButtons_F;
        public InputAction @G => m_Wrapper.m_PickCharacterSceneButtons_G;
        public InputAction @H => m_Wrapper.m_PickCharacterSceneButtons_H;
        public InputAction @I => m_Wrapper.m_PickCharacterSceneButtons_I;
        public InputAction @J => m_Wrapper.m_PickCharacterSceneButtons_J;
        public InputAction @K => m_Wrapper.m_PickCharacterSceneButtons_K;
        public InputAction @MenuButton => m_Wrapper.m_PickCharacterSceneButtons_MenuButton;
        public InputAction @PickWeaponButton => m_Wrapper.m_PickCharacterSceneButtons_PickWeaponButton;
        public InputAction @CharacterMenuInput => m_Wrapper.m_PickCharacterSceneButtons_CharacterMenuInput;
        public InputActionMap Get() { return m_Wrapper.m_PickCharacterSceneButtons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PickCharacterSceneButtonsActions set) { return set.Get(); }
        public void AddCallbacks(IPickCharacterSceneButtonsActions instance)
        {
            if (instance == null || m_Wrapper.m_PickCharacterSceneButtonsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PickCharacterSceneButtonsActionsCallbackInterfaces.Add(instance);
            @A.started += instance.OnA;
            @A.performed += instance.OnA;
            @A.canceled += instance.OnA;
            @B.started += instance.OnB;
            @B.performed += instance.OnB;
            @B.canceled += instance.OnB;
            @C.started += instance.OnC;
            @C.performed += instance.OnC;
            @C.canceled += instance.OnC;
            @D.started += instance.OnD;
            @D.performed += instance.OnD;
            @D.canceled += instance.OnD;
            @E.started += instance.OnE;
            @E.performed += instance.OnE;
            @E.canceled += instance.OnE;
            @F.started += instance.OnF;
            @F.performed += instance.OnF;
            @F.canceled += instance.OnF;
            @G.started += instance.OnG;
            @G.performed += instance.OnG;
            @G.canceled += instance.OnG;
            @H.started += instance.OnH;
            @H.performed += instance.OnH;
            @H.canceled += instance.OnH;
            @I.started += instance.OnI;
            @I.performed += instance.OnI;
            @I.canceled += instance.OnI;
            @J.started += instance.OnJ;
            @J.performed += instance.OnJ;
            @J.canceled += instance.OnJ;
            @K.started += instance.OnK;
            @K.performed += instance.OnK;
            @K.canceled += instance.OnK;
            @MenuButton.started += instance.OnMenuButton;
            @MenuButton.performed += instance.OnMenuButton;
            @MenuButton.canceled += instance.OnMenuButton;
            @PickWeaponButton.started += instance.OnPickWeaponButton;
            @PickWeaponButton.performed += instance.OnPickWeaponButton;
            @PickWeaponButton.canceled += instance.OnPickWeaponButton;
            @CharacterMenuInput.started += instance.OnCharacterMenuInput;
            @CharacterMenuInput.performed += instance.OnCharacterMenuInput;
            @CharacterMenuInput.canceled += instance.OnCharacterMenuInput;
        }

        private void UnregisterCallbacks(IPickCharacterSceneButtonsActions instance)
        {
            @A.started -= instance.OnA;
            @A.performed -= instance.OnA;
            @A.canceled -= instance.OnA;
            @B.started -= instance.OnB;
            @B.performed -= instance.OnB;
            @B.canceled -= instance.OnB;
            @C.started -= instance.OnC;
            @C.performed -= instance.OnC;
            @C.canceled -= instance.OnC;
            @D.started -= instance.OnD;
            @D.performed -= instance.OnD;
            @D.canceled -= instance.OnD;
            @E.started -= instance.OnE;
            @E.performed -= instance.OnE;
            @E.canceled -= instance.OnE;
            @F.started -= instance.OnF;
            @F.performed -= instance.OnF;
            @F.canceled -= instance.OnF;
            @G.started -= instance.OnG;
            @G.performed -= instance.OnG;
            @G.canceled -= instance.OnG;
            @H.started -= instance.OnH;
            @H.performed -= instance.OnH;
            @H.canceled -= instance.OnH;
            @I.started -= instance.OnI;
            @I.performed -= instance.OnI;
            @I.canceled -= instance.OnI;
            @J.started -= instance.OnJ;
            @J.performed -= instance.OnJ;
            @J.canceled -= instance.OnJ;
            @K.started -= instance.OnK;
            @K.performed -= instance.OnK;
            @K.canceled -= instance.OnK;
            @MenuButton.started -= instance.OnMenuButton;
            @MenuButton.performed -= instance.OnMenuButton;
            @MenuButton.canceled -= instance.OnMenuButton;
            @PickWeaponButton.started -= instance.OnPickWeaponButton;
            @PickWeaponButton.performed -= instance.OnPickWeaponButton;
            @PickWeaponButton.canceled -= instance.OnPickWeaponButton;
            @CharacterMenuInput.started -= instance.OnCharacterMenuInput;
            @CharacterMenuInput.performed -= instance.OnCharacterMenuInput;
            @CharacterMenuInput.canceled -= instance.OnCharacterMenuInput;
        }

        public void RemoveCallbacks(IPickCharacterSceneButtonsActions instance)
        {
            if (m_Wrapper.m_PickCharacterSceneButtonsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPickCharacterSceneButtonsActions instance)
        {
            foreach (var item in m_Wrapper.m_PickCharacterSceneButtonsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PickCharacterSceneButtonsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PickCharacterSceneButtonsActions @PickCharacterSceneButtons => new PickCharacterSceneButtonsActions(this);

    // LevelsSceneButtons
    private readonly InputActionMap m_LevelsSceneButtons;
    private List<ILevelsSceneButtonsActions> m_LevelsSceneButtonsActionsCallbackInterfaces = new List<ILevelsSceneButtonsActions>();
    private readonly InputAction m_LevelsSceneButtons_Level1;
    private readonly InputAction m_LevelsSceneButtons_Level2;
    private readonly InputAction m_LevelsSceneButtons_Level3;
    private readonly InputAction m_LevelsSceneButtons_Level4;
    private readonly InputAction m_LevelsSceneButtons_Level5;
    private readonly InputAction m_LevelsSceneButtons_Level6;
    private readonly InputAction m_LevelsSceneButtons_Level7;
    private readonly InputAction m_LevelsSceneButtons_Level8;
    private readonly InputAction m_LevelsSceneButtons_Level9;
    private readonly InputAction m_LevelsSceneButtons_Level10;
    private readonly InputAction m_LevelsSceneButtons_LevelsMenuButton;
    public struct LevelsSceneButtonsActions
    {
        private @GameInput m_Wrapper;
        public LevelsSceneButtonsActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Level1 => m_Wrapper.m_LevelsSceneButtons_Level1;
        public InputAction @Level2 => m_Wrapper.m_LevelsSceneButtons_Level2;
        public InputAction @Level3 => m_Wrapper.m_LevelsSceneButtons_Level3;
        public InputAction @Level4 => m_Wrapper.m_LevelsSceneButtons_Level4;
        public InputAction @Level5 => m_Wrapper.m_LevelsSceneButtons_Level5;
        public InputAction @Level6 => m_Wrapper.m_LevelsSceneButtons_Level6;
        public InputAction @Level7 => m_Wrapper.m_LevelsSceneButtons_Level7;
        public InputAction @Level8 => m_Wrapper.m_LevelsSceneButtons_Level8;
        public InputAction @Level9 => m_Wrapper.m_LevelsSceneButtons_Level9;
        public InputAction @Level10 => m_Wrapper.m_LevelsSceneButtons_Level10;
        public InputAction @LevelsMenuButton => m_Wrapper.m_LevelsSceneButtons_LevelsMenuButton;
        public InputActionMap Get() { return m_Wrapper.m_LevelsSceneButtons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LevelsSceneButtonsActions set) { return set.Get(); }
        public void AddCallbacks(ILevelsSceneButtonsActions instance)
        {
            if (instance == null || m_Wrapper.m_LevelsSceneButtonsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_LevelsSceneButtonsActionsCallbackInterfaces.Add(instance);
            @Level1.started += instance.OnLevel1;
            @Level1.performed += instance.OnLevel1;
            @Level1.canceled += instance.OnLevel1;
            @Level2.started += instance.OnLevel2;
            @Level2.performed += instance.OnLevel2;
            @Level2.canceled += instance.OnLevel2;
            @Level3.started += instance.OnLevel3;
            @Level3.performed += instance.OnLevel3;
            @Level3.canceled += instance.OnLevel3;
            @Level4.started += instance.OnLevel4;
            @Level4.performed += instance.OnLevel4;
            @Level4.canceled += instance.OnLevel4;
            @Level5.started += instance.OnLevel5;
            @Level5.performed += instance.OnLevel5;
            @Level5.canceled += instance.OnLevel5;
            @Level6.started += instance.OnLevel6;
            @Level6.performed += instance.OnLevel6;
            @Level6.canceled += instance.OnLevel6;
            @Level7.started += instance.OnLevel7;
            @Level7.performed += instance.OnLevel7;
            @Level7.canceled += instance.OnLevel7;
            @Level8.started += instance.OnLevel8;
            @Level8.performed += instance.OnLevel8;
            @Level8.canceled += instance.OnLevel8;
            @Level9.started += instance.OnLevel9;
            @Level9.performed += instance.OnLevel9;
            @Level9.canceled += instance.OnLevel9;
            @Level10.started += instance.OnLevel10;
            @Level10.performed += instance.OnLevel10;
            @Level10.canceled += instance.OnLevel10;
            @LevelsMenuButton.started += instance.OnLevelsMenuButton;
            @LevelsMenuButton.performed += instance.OnLevelsMenuButton;
            @LevelsMenuButton.canceled += instance.OnLevelsMenuButton;
        }

        private void UnregisterCallbacks(ILevelsSceneButtonsActions instance)
        {
            @Level1.started -= instance.OnLevel1;
            @Level1.performed -= instance.OnLevel1;
            @Level1.canceled -= instance.OnLevel1;
            @Level2.started -= instance.OnLevel2;
            @Level2.performed -= instance.OnLevel2;
            @Level2.canceled -= instance.OnLevel2;
            @Level3.started -= instance.OnLevel3;
            @Level3.performed -= instance.OnLevel3;
            @Level3.canceled -= instance.OnLevel3;
            @Level4.started -= instance.OnLevel4;
            @Level4.performed -= instance.OnLevel4;
            @Level4.canceled -= instance.OnLevel4;
            @Level5.started -= instance.OnLevel5;
            @Level5.performed -= instance.OnLevel5;
            @Level5.canceled -= instance.OnLevel5;
            @Level6.started -= instance.OnLevel6;
            @Level6.performed -= instance.OnLevel6;
            @Level6.canceled -= instance.OnLevel6;
            @Level7.started -= instance.OnLevel7;
            @Level7.performed -= instance.OnLevel7;
            @Level7.canceled -= instance.OnLevel7;
            @Level8.started -= instance.OnLevel8;
            @Level8.performed -= instance.OnLevel8;
            @Level8.canceled -= instance.OnLevel8;
            @Level9.started -= instance.OnLevel9;
            @Level9.performed -= instance.OnLevel9;
            @Level9.canceled -= instance.OnLevel9;
            @Level10.started -= instance.OnLevel10;
            @Level10.performed -= instance.OnLevel10;
            @Level10.canceled -= instance.OnLevel10;
            @LevelsMenuButton.started -= instance.OnLevelsMenuButton;
            @LevelsMenuButton.performed -= instance.OnLevelsMenuButton;
            @LevelsMenuButton.canceled -= instance.OnLevelsMenuButton;
        }

        public void RemoveCallbacks(ILevelsSceneButtonsActions instance)
        {
            if (m_Wrapper.m_LevelsSceneButtonsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ILevelsSceneButtonsActions instance)
        {
            foreach (var item in m_Wrapper.m_LevelsSceneButtonsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_LevelsSceneButtonsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public LevelsSceneButtonsActions @LevelsSceneButtons => new LevelsSceneButtonsActions(this);

    // MenuSceneButtons
    private readonly InputActionMap m_MenuSceneButtons;
    private List<IMenuSceneButtonsActions> m_MenuSceneButtonsActionsCallbackInterfaces = new List<IMenuSceneButtonsActions>();
    private readonly InputAction m_MenuSceneButtons_PlayButton;
    private readonly InputAction m_MenuSceneButtons_LevelsButton;
    private readonly InputAction m_MenuSceneButtons_SettingButton;
    private readonly InputAction m_MenuSceneButtons_QuitButton;
    private readonly InputAction m_MenuSceneButtons_LanguageButton;
    private readonly InputAction m_MenuSceneButtons_MenuDefaultButton;
    private readonly InputAction m_MenuSceneButtons_PickCharacterButton;
    private readonly InputAction m_MenuSceneButtons_PickWeaponButton;
    private readonly InputAction m_MenuSceneButtons_ContinueButton;
    private readonly InputAction m_MenuSceneButtons_ResetGameButton;
    public struct MenuSceneButtonsActions
    {
        private @GameInput m_Wrapper;
        public MenuSceneButtonsActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayButton => m_Wrapper.m_MenuSceneButtons_PlayButton;
        public InputAction @LevelsButton => m_Wrapper.m_MenuSceneButtons_LevelsButton;
        public InputAction @SettingButton => m_Wrapper.m_MenuSceneButtons_SettingButton;
        public InputAction @QuitButton => m_Wrapper.m_MenuSceneButtons_QuitButton;
        public InputAction @LanguageButton => m_Wrapper.m_MenuSceneButtons_LanguageButton;
        public InputAction @MenuDefaultButton => m_Wrapper.m_MenuSceneButtons_MenuDefaultButton;
        public InputAction @PickCharacterButton => m_Wrapper.m_MenuSceneButtons_PickCharacterButton;
        public InputAction @PickWeaponButton => m_Wrapper.m_MenuSceneButtons_PickWeaponButton;
        public InputAction @ContinueButton => m_Wrapper.m_MenuSceneButtons_ContinueButton;
        public InputAction @ResetGameButton => m_Wrapper.m_MenuSceneButtons_ResetGameButton;
        public InputActionMap Get() { return m_Wrapper.m_MenuSceneButtons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuSceneButtonsActions set) { return set.Get(); }
        public void AddCallbacks(IMenuSceneButtonsActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuSceneButtonsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuSceneButtonsActionsCallbackInterfaces.Add(instance);
            @PlayButton.started += instance.OnPlayButton;
            @PlayButton.performed += instance.OnPlayButton;
            @PlayButton.canceled += instance.OnPlayButton;
            @LevelsButton.started += instance.OnLevelsButton;
            @LevelsButton.performed += instance.OnLevelsButton;
            @LevelsButton.canceled += instance.OnLevelsButton;
            @SettingButton.started += instance.OnSettingButton;
            @SettingButton.performed += instance.OnSettingButton;
            @SettingButton.canceled += instance.OnSettingButton;
            @QuitButton.started += instance.OnQuitButton;
            @QuitButton.performed += instance.OnQuitButton;
            @QuitButton.canceled += instance.OnQuitButton;
            @LanguageButton.started += instance.OnLanguageButton;
            @LanguageButton.performed += instance.OnLanguageButton;
            @LanguageButton.canceled += instance.OnLanguageButton;
            @MenuDefaultButton.started += instance.OnMenuDefaultButton;
            @MenuDefaultButton.performed += instance.OnMenuDefaultButton;
            @MenuDefaultButton.canceled += instance.OnMenuDefaultButton;
            @PickCharacterButton.started += instance.OnPickCharacterButton;
            @PickCharacterButton.performed += instance.OnPickCharacterButton;
            @PickCharacterButton.canceled += instance.OnPickCharacterButton;
            @PickWeaponButton.started += instance.OnPickWeaponButton;
            @PickWeaponButton.performed += instance.OnPickWeaponButton;
            @PickWeaponButton.canceled += instance.OnPickWeaponButton;
            @ContinueButton.started += instance.OnContinueButton;
            @ContinueButton.performed += instance.OnContinueButton;
            @ContinueButton.canceled += instance.OnContinueButton;
            @ResetGameButton.started += instance.OnResetGameButton;
            @ResetGameButton.performed += instance.OnResetGameButton;
            @ResetGameButton.canceled += instance.OnResetGameButton;
        }

        private void UnregisterCallbacks(IMenuSceneButtonsActions instance)
        {
            @PlayButton.started -= instance.OnPlayButton;
            @PlayButton.performed -= instance.OnPlayButton;
            @PlayButton.canceled -= instance.OnPlayButton;
            @LevelsButton.started -= instance.OnLevelsButton;
            @LevelsButton.performed -= instance.OnLevelsButton;
            @LevelsButton.canceled -= instance.OnLevelsButton;
            @SettingButton.started -= instance.OnSettingButton;
            @SettingButton.performed -= instance.OnSettingButton;
            @SettingButton.canceled -= instance.OnSettingButton;
            @QuitButton.started -= instance.OnQuitButton;
            @QuitButton.performed -= instance.OnQuitButton;
            @QuitButton.canceled -= instance.OnQuitButton;
            @LanguageButton.started -= instance.OnLanguageButton;
            @LanguageButton.performed -= instance.OnLanguageButton;
            @LanguageButton.canceled -= instance.OnLanguageButton;
            @MenuDefaultButton.started -= instance.OnMenuDefaultButton;
            @MenuDefaultButton.performed -= instance.OnMenuDefaultButton;
            @MenuDefaultButton.canceled -= instance.OnMenuDefaultButton;
            @PickCharacterButton.started -= instance.OnPickCharacterButton;
            @PickCharacterButton.performed -= instance.OnPickCharacterButton;
            @PickCharacterButton.canceled -= instance.OnPickCharacterButton;
            @PickWeaponButton.started -= instance.OnPickWeaponButton;
            @PickWeaponButton.performed -= instance.OnPickWeaponButton;
            @PickWeaponButton.canceled -= instance.OnPickWeaponButton;
            @ContinueButton.started -= instance.OnContinueButton;
            @ContinueButton.performed -= instance.OnContinueButton;
            @ContinueButton.canceled -= instance.OnContinueButton;
            @ResetGameButton.started -= instance.OnResetGameButton;
            @ResetGameButton.performed -= instance.OnResetGameButton;
            @ResetGameButton.canceled -= instance.OnResetGameButton;
        }

        public void RemoveCallbacks(IMenuSceneButtonsActions instance)
        {
            if (m_Wrapper.m_MenuSceneButtonsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuSceneButtonsActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuSceneButtonsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuSceneButtonsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuSceneButtonsActions @MenuSceneButtons => new MenuSceneButtonsActions(this);

    // TopPanelButtons
    private readonly InputActionMap m_TopPanelButtons;
    private List<ITopPanelButtonsActions> m_TopPanelButtonsActionsCallbackInterfaces = new List<ITopPanelButtonsActions>();
    private readonly InputAction m_TopPanelButtons_PauseButton;
    private readonly InputAction m_TopPanelButtons_PlayAgainButton;
    public struct TopPanelButtonsActions
    {
        private @GameInput m_Wrapper;
        public TopPanelButtonsActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @PauseButton => m_Wrapper.m_TopPanelButtons_PauseButton;
        public InputAction @PlayAgainButton => m_Wrapper.m_TopPanelButtons_PlayAgainButton;
        public InputActionMap Get() { return m_Wrapper.m_TopPanelButtons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TopPanelButtonsActions set) { return set.Get(); }
        public void AddCallbacks(ITopPanelButtonsActions instance)
        {
            if (instance == null || m_Wrapper.m_TopPanelButtonsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TopPanelButtonsActionsCallbackInterfaces.Add(instance);
            @PauseButton.started += instance.OnPauseButton;
            @PauseButton.performed += instance.OnPauseButton;
            @PauseButton.canceled += instance.OnPauseButton;
            @PlayAgainButton.started += instance.OnPlayAgainButton;
            @PlayAgainButton.performed += instance.OnPlayAgainButton;
            @PlayAgainButton.canceled += instance.OnPlayAgainButton;
        }

        private void UnregisterCallbacks(ITopPanelButtonsActions instance)
        {
            @PauseButton.started -= instance.OnPauseButton;
            @PauseButton.performed -= instance.OnPauseButton;
            @PauseButton.canceled -= instance.OnPauseButton;
            @PlayAgainButton.started -= instance.OnPlayAgainButton;
            @PlayAgainButton.performed -= instance.OnPlayAgainButton;
            @PlayAgainButton.canceled -= instance.OnPlayAgainButton;
        }

        public void RemoveCallbacks(ITopPanelButtonsActions instance)
        {
            if (m_Wrapper.m_TopPanelButtonsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITopPanelButtonsActions instance)
        {
            foreach (var item in m_Wrapper.m_TopPanelButtonsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TopPanelButtonsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TopPanelButtonsActions @TopPanelButtons => new TopPanelButtonsActions(this);

    // PausePanelButtons
    private readonly InputActionMap m_PausePanelButtons;
    private List<IPausePanelButtonsActions> m_PausePanelButtonsActionsCallbackInterfaces = new List<IPausePanelButtonsActions>();
    private readonly InputAction m_PausePanelButtons_MenuButton;
    private readonly InputAction m_PausePanelButtons_DefaultButton;
    public struct PausePanelButtonsActions
    {
        private @GameInput m_Wrapper;
        public PausePanelButtonsActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MenuButton => m_Wrapper.m_PausePanelButtons_MenuButton;
        public InputAction @DefaultButton => m_Wrapper.m_PausePanelButtons_DefaultButton;
        public InputActionMap Get() { return m_Wrapper.m_PausePanelButtons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PausePanelButtonsActions set) { return set.Get(); }
        public void AddCallbacks(IPausePanelButtonsActions instance)
        {
            if (instance == null || m_Wrapper.m_PausePanelButtonsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PausePanelButtonsActionsCallbackInterfaces.Add(instance);
            @MenuButton.started += instance.OnMenuButton;
            @MenuButton.performed += instance.OnMenuButton;
            @MenuButton.canceled += instance.OnMenuButton;
            @DefaultButton.started += instance.OnDefaultButton;
            @DefaultButton.performed += instance.OnDefaultButton;
            @DefaultButton.canceled += instance.OnDefaultButton;
        }

        private void UnregisterCallbacks(IPausePanelButtonsActions instance)
        {
            @MenuButton.started -= instance.OnMenuButton;
            @MenuButton.performed -= instance.OnMenuButton;
            @MenuButton.canceled -= instance.OnMenuButton;
            @DefaultButton.started -= instance.OnDefaultButton;
            @DefaultButton.performed -= instance.OnDefaultButton;
            @DefaultButton.canceled -= instance.OnDefaultButton;
        }

        public void RemoveCallbacks(IPausePanelButtonsActions instance)
        {
            if (m_Wrapper.m_PausePanelButtonsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPausePanelButtonsActions instance)
        {
            foreach (var item in m_Wrapper.m_PausePanelButtonsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PausePanelButtonsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PausePanelButtonsActions @PausePanelButtons => new PausePanelButtonsActions(this);

    // PlayerMain
    private readonly InputActionMap m_PlayerMain;
    private List<IPlayerMainActions> m_PlayerMainActionsCallbackInterfaces = new List<IPlayerMainActions>();
    private readonly InputAction m_PlayerMain_Move;
    private readonly InputAction m_PlayerMain_Fire;
    private readonly InputAction m_PlayerMain_Jump;
    private readonly InputAction m_PlayerMain_Look;
    private readonly InputAction m_PlayerMain_Run;
    private readonly InputAction m_PlayerMain_Sword;
    private readonly InputAction m_PlayerMain_FireDirection;
    public struct PlayerMainActions
    {
        private @GameInput m_Wrapper;
        public PlayerMainActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerMain_Move;
        public InputAction @Fire => m_Wrapper.m_PlayerMain_Fire;
        public InputAction @Jump => m_Wrapper.m_PlayerMain_Jump;
        public InputAction @Look => m_Wrapper.m_PlayerMain_Look;
        public InputAction @Run => m_Wrapper.m_PlayerMain_Run;
        public InputAction @Sword => m_Wrapper.m_PlayerMain_Sword;
        public InputAction @FireDirection => m_Wrapper.m_PlayerMain_FireDirection;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMain; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMainActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerMainActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMainActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMainActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Sword.started += instance.OnSword;
            @Sword.performed += instance.OnSword;
            @Sword.canceled += instance.OnSword;
            @FireDirection.started += instance.OnFireDirection;
            @FireDirection.performed += instance.OnFireDirection;
            @FireDirection.canceled += instance.OnFireDirection;
        }

        private void UnregisterCallbacks(IPlayerMainActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Sword.started -= instance.OnSword;
            @Sword.performed -= instance.OnSword;
            @Sword.canceled -= instance.OnSword;
            @FireDirection.started -= instance.OnFireDirection;
            @FireDirection.performed -= instance.OnFireDirection;
            @FireDirection.canceled -= instance.OnFireDirection;
        }

        public void RemoveCallbacks(IPlayerMainActions instance)
        {
            if (m_Wrapper.m_PlayerMainActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerMainActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMainActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMainActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerMainActions @PlayerMain => new PlayerMainActions(this);

    // GrowMap
    private readonly InputActionMap m_GrowMap;
    private List<IGrowMapActions> m_GrowMapActionsCallbackInterfaces = new List<IGrowMapActions>();
    private readonly InputAction m_GrowMap_GrowingState;
    public struct GrowMapActions
    {
        private @GameInput m_Wrapper;
        public GrowMapActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @GrowingState => m_Wrapper.m_GrowMap_GrowingState;
        public InputActionMap Get() { return m_Wrapper.m_GrowMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GrowMapActions set) { return set.Get(); }
        public void AddCallbacks(IGrowMapActions instance)
        {
            if (instance == null || m_Wrapper.m_GrowMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GrowMapActionsCallbackInterfaces.Add(instance);
            @GrowingState.started += instance.OnGrowingState;
            @GrowingState.performed += instance.OnGrowingState;
            @GrowingState.canceled += instance.OnGrowingState;
        }

        private void UnregisterCallbacks(IGrowMapActions instance)
        {
            @GrowingState.started -= instance.OnGrowingState;
            @GrowingState.performed -= instance.OnGrowingState;
            @GrowingState.canceled -= instance.OnGrowingState;
        }

        public void RemoveCallbacks(IGrowMapActions instance)
        {
            if (m_Wrapper.m_GrowMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGrowMapActions instance)
        {
            foreach (var item in m_Wrapper.m_GrowMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GrowMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GrowMapActions @GrowMap => new GrowMapActions(this);
    public interface IWinSceneButtonsActions
    {
        void OnMenuButton(InputAction.CallbackContext context);
        void OnPlayAgainButton(InputAction.CallbackContext context);
        void OnQuitButton(InputAction.CallbackContext context);
    }
    public interface IEndSceneButttonsActions
    {
        void OnMenuButton(InputAction.CallbackContext context);
        void OnPlayAgainButton(InputAction.CallbackContext context);
        void OnQuitButton(InputAction.CallbackContext context);
    }
    public interface IPickWeaponSceneButtonsActions
    {
        void OnA(InputAction.CallbackContext context);
        void OnB(InputAction.CallbackContext context);
        void OnC(InputAction.CallbackContext context);
        void OnD(InputAction.CallbackContext context);
        void OnE(InputAction.CallbackContext context);
        void OnF(InputAction.CallbackContext context);
        void OnG(InputAction.CallbackContext context);
        void OnH(InputAction.CallbackContext context);
        void OnI(InputAction.CallbackContext context);
        void OnJ(InputAction.CallbackContext context);
        void OnMenuButton(InputAction.CallbackContext context);
        void OnPickCharacterButton(InputAction.CallbackContext context);
        void OnWeaponMenuInput(InputAction.CallbackContext context);
    }
    public interface IPickCharacterSceneButtonsActions
    {
        void OnA(InputAction.CallbackContext context);
        void OnB(InputAction.CallbackContext context);
        void OnC(InputAction.CallbackContext context);
        void OnD(InputAction.CallbackContext context);
        void OnE(InputAction.CallbackContext context);
        void OnF(InputAction.CallbackContext context);
        void OnG(InputAction.CallbackContext context);
        void OnH(InputAction.CallbackContext context);
        void OnI(InputAction.CallbackContext context);
        void OnJ(InputAction.CallbackContext context);
        void OnK(InputAction.CallbackContext context);
        void OnMenuButton(InputAction.CallbackContext context);
        void OnPickWeaponButton(InputAction.CallbackContext context);
        void OnCharacterMenuInput(InputAction.CallbackContext context);
    }
    public interface ILevelsSceneButtonsActions
    {
        void OnLevel1(InputAction.CallbackContext context);
        void OnLevel2(InputAction.CallbackContext context);
        void OnLevel3(InputAction.CallbackContext context);
        void OnLevel4(InputAction.CallbackContext context);
        void OnLevel5(InputAction.CallbackContext context);
        void OnLevel6(InputAction.CallbackContext context);
        void OnLevel7(InputAction.CallbackContext context);
        void OnLevel8(InputAction.CallbackContext context);
        void OnLevel9(InputAction.CallbackContext context);
        void OnLevel10(InputAction.CallbackContext context);
        void OnLevelsMenuButton(InputAction.CallbackContext context);
    }
    public interface IMenuSceneButtonsActions
    {
        void OnPlayButton(InputAction.CallbackContext context);
        void OnLevelsButton(InputAction.CallbackContext context);
        void OnSettingButton(InputAction.CallbackContext context);
        void OnQuitButton(InputAction.CallbackContext context);
        void OnLanguageButton(InputAction.CallbackContext context);
        void OnMenuDefaultButton(InputAction.CallbackContext context);
        void OnPickCharacterButton(InputAction.CallbackContext context);
        void OnPickWeaponButton(InputAction.CallbackContext context);
        void OnContinueButton(InputAction.CallbackContext context);
        void OnResetGameButton(InputAction.CallbackContext context);
    }
    public interface ITopPanelButtonsActions
    {
        void OnPauseButton(InputAction.CallbackContext context);
        void OnPlayAgainButton(InputAction.CallbackContext context);
    }
    public interface IPausePanelButtonsActions
    {
        void OnMenuButton(InputAction.CallbackContext context);
        void OnDefaultButton(InputAction.CallbackContext context);
    }
    public interface IPlayerMainActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnSword(InputAction.CallbackContext context);
        void OnFireDirection(InputAction.CallbackContext context);
    }
    public interface IGrowMapActions
    {
        void OnGrowingState(InputAction.CallbackContext context);
    }
}
